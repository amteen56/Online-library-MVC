@model Online_library_MVC.Models.OnlineLibraryDataModel

@{
    /**/

    ViewBag.Title = "CreateItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



    <div class="form-horizontal">
        <h4>Add Item In Library</h4>

        <div class="container">
            @if (TempData["showen"].ToString() == "false")
            {
                if (TempData["added"].ToString() == "true")
                {
                    TempData["showen"] = true;
                    <div class="alert alert-success">
                        <strong>Success!</strong> Item Created Successfully.
                    </div>
                }
                if (TempData["added"].ToString() == "false")
                {
                    TempData["showen"] = true;
                    <div class="alert alert-danger">
                        <strong>Error!</strong> Invalid error occured while performing your Request Try Again!
                    </div>
                }
            }
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.itemtype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="type" name="type">
                    <option>Journal</option>
                    <option>NEWSPAPER</option>
                    <option>Book</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.itemtitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.itemtitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.itemtitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.noofissue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.noofissue, new { htmlAttributes = new { @class = "form-control", @id = "id1" } })
                @Html.ValidationMessageFor(model => model.noofissue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
   
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
