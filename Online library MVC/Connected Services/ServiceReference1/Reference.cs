//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Online_library_MVC.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnlineLibData", Namespace="http://schemas.datacontract.org/2004/07/OnlineLibraryClass")]
    [System.SerializableAttribute()]
    public partial class OnlineLibData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double costField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string issuedateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int itemidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string itemtitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string itemtypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int noofissueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string returndateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double cost {
            get {
                return this.costField;
            }
            set {
                if ((this.costField.Equals(value) != true)) {
                    this.costField = value;
                    this.RaisePropertyChanged("cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string issuedate {
            get {
                return this.issuedateField;
            }
            set {
                if ((object.ReferenceEquals(this.issuedateField, value) != true)) {
                    this.issuedateField = value;
                    this.RaisePropertyChanged("issuedate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int itemid {
            get {
                return this.itemidField;
            }
            set {
                if ((this.itemidField.Equals(value) != true)) {
                    this.itemidField = value;
                    this.RaisePropertyChanged("itemid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string itemtitle {
            get {
                return this.itemtitleField;
            }
            set {
                if ((object.ReferenceEquals(this.itemtitleField, value) != true)) {
                    this.itemtitleField = value;
                    this.RaisePropertyChanged("itemtitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string itemtype {
            get {
                return this.itemtypeField;
            }
            set {
                if ((object.ReferenceEquals(this.itemtypeField, value) != true)) {
                    this.itemtypeField = value;
                    this.RaisePropertyChanged("itemtype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int noofissue {
            get {
                return this.noofissueField;
            }
            set {
                if ((this.noofissueField.Equals(value) != true)) {
                    this.noofissueField = value;
                    this.RaisePropertyChanged("noofissue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string returndate {
            get {
                return this.returndateField;
            }
            set {
                if ((object.ReferenceEquals(this.returndateField, value) != true)) {
                    this.returndateField = value;
                    this.RaisePropertyChanged("returndate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string uname {
            get {
                return this.unameField;
            }
            set {
                if ((object.ReferenceEquals(this.unameField, value) != true)) {
                    this.unameField = value;
                    this.RaisePropertyChanged("uname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IOneLibrary")]
    public interface IOneLibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/AddItem", ReplyAction="http://tempuri.org/IOneLibrary/AddItemResponse")]
        bool AddItem(Online_library_MVC.ServiceReference1.OnlineLibData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/AddItem", ReplyAction="http://tempuri.org/IOneLibrary/AddItemResponse")]
        System.Threading.Tasks.Task<bool> AddItemAsync(Online_library_MVC.ServiceReference1.OnlineLibData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/UpdateItem", ReplyAction="http://tempuri.org/IOneLibrary/UpdateItemResponse")]
        bool UpdateItem(Online_library_MVC.ServiceReference1.OnlineLibData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/UpdateItem", ReplyAction="http://tempuri.org/IOneLibrary/UpdateItemResponse")]
        System.Threading.Tasks.Task<bool> UpdateItemAsync(Online_library_MVC.ServiceReference1.OnlineLibData data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/DeleteItem", ReplyAction="http://tempuri.org/IOneLibrary/DeleteItemResponse")]
        bool DeleteItem(int Itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/DeleteItem", ReplyAction="http://tempuri.org/IOneLibrary/DeleteItemResponse")]
        System.Threading.Tasks.Task<bool> DeleteItemAsync(int Itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/BorrowItem", ReplyAction="http://tempuri.org/IOneLibrary/BorrowItemResponse")]
        bool BorrowItem(int itemid, string returndate, string uname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/BorrowItem", ReplyAction="http://tempuri.org/IOneLibrary/BorrowItemResponse")]
        System.Threading.Tasks.Task<bool> BorrowItemAsync(int itemid, string returndate, string uname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/ReturnItem", ReplyAction="http://tempuri.org/IOneLibrary/ReturnItemResponse")]
        double ReturnItem(int itemid, string uname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/ReturnItem", ReplyAction="http://tempuri.org/IOneLibrary/ReturnItemResponse")]
        System.Threading.Tasks.Task<double> ReturnItemAsync(int itemid, string uname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/getData", ReplyAction="http://tempuri.org/IOneLibrary/getDataResponse")]
        Online_library_MVC.ServiceReference1.OnlineLibData[] getData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOneLibrary/getData", ReplyAction="http://tempuri.org/IOneLibrary/getDataResponse")]
        System.Threading.Tasks.Task<Online_library_MVC.ServiceReference1.OnlineLibData[]> getDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOneLibraryChannel : Online_library_MVC.ServiceReference1.IOneLibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OneLibraryClient : System.ServiceModel.ClientBase<Online_library_MVC.ServiceReference1.IOneLibrary>, Online_library_MVC.ServiceReference1.IOneLibrary {
        
        public OneLibraryClient() {
        }
        
        public OneLibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OneLibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OneLibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OneLibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddItem(Online_library_MVC.ServiceReference1.OnlineLibData data) {
            return base.Channel.AddItem(data);
        }
        
        public System.Threading.Tasks.Task<bool> AddItemAsync(Online_library_MVC.ServiceReference1.OnlineLibData data) {
            return base.Channel.AddItemAsync(data);
        }
        
        public bool UpdateItem(Online_library_MVC.ServiceReference1.OnlineLibData data) {
            return base.Channel.UpdateItem(data);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateItemAsync(Online_library_MVC.ServiceReference1.OnlineLibData data) {
            return base.Channel.UpdateItemAsync(data);
        }
        
        public bool DeleteItem(int Itemid) {
            return base.Channel.DeleteItem(Itemid);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteItemAsync(int Itemid) {
            return base.Channel.DeleteItemAsync(Itemid);
        }
        
        public bool BorrowItem(int itemid, string returndate, string uname) {
            return base.Channel.BorrowItem(itemid, returndate, uname);
        }
        
        public System.Threading.Tasks.Task<bool> BorrowItemAsync(int itemid, string returndate, string uname) {
            return base.Channel.BorrowItemAsync(itemid, returndate, uname);
        }
        
        public double ReturnItem(int itemid, string uname) {
            return base.Channel.ReturnItem(itemid, uname);
        }
        
        public System.Threading.Tasks.Task<double> ReturnItemAsync(int itemid, string uname) {
            return base.Channel.ReturnItemAsync(itemid, uname);
        }
        
        public Online_library_MVC.ServiceReference1.OnlineLibData[] getData() {
            return base.Channel.getData();
        }
        
        public System.Threading.Tasks.Task<Online_library_MVC.ServiceReference1.OnlineLibData[]> getDataAsync() {
            return base.Channel.getDataAsync();
        }
    }
}
