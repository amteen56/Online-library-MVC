@model Online_library_MVC.ServiceReference1.OnlineLibData

@{
    ViewBag.Title = "EditItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Item</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    

<div class="form-horizontal">
    <h4>Update</h4>
    <hr />
    <div class="container">
        @if (TempData["showened"].ToString() == "false")
        {
            if (TempData["edit"].ToString() == "true")
            {
                TempData["showened"] = true;
                <div class="alert alert-success">
                    <strong>Success!</strong> Item Updated Successfully.
                </div>
            }
            if (TempData["edit"].ToString() == "false")
            {
                TempData["showened"] = true;
                <div class="alert alert-danger">
                    <strong>Error!</strong> Invalid error occured while performing your Request Try Again!
                </div>
            }
        }
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.itemid, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.itemid, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.itemid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.itemtype, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.itemtype, new { htmlAttributes = new { @class = "form-control disabledClass", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.itemtype, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.itemtitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.itemtitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.itemtitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.noofissue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.noofissue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.noofissue, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
